name: Docker Build and Push

on:
  push:
    branches:
      - main  # Define a branch que vai acionar o workflow, altere conforme necessário

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_P }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .  # O contexto é a raiz do repositório, igual ao seu comando local
          push: true
          no-cache: true  # Equivalente ao --no-cache do seu comando
          file: ./Dockerfile  # Especifica o caminho para o Dockerfile
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.sha }}

      - name: Logout from GitHub Container Registry
        run: docker logout ghcr.io

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Só roda o deploy após o build ser concluído

    steps:
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Usando a chave SSH
          passphrase: ${{ secrets.SSH_KEY_PASSWORD }}  # Usando a senha da chave SSH
          script: |
            # Navegar até o diretório do docker-compose
            cd /root/containers/streamfeed-api  # Ajuste para o caminho correto no servidor

            # Fazer login no GitHub Container Registry
            echo ${{ secrets.GH_P }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Puxar a nova versão da imagem
            docker compose pull

            # Reiniciar o serviço
            docker compose up -d

            # Logout do GitHub Container Registry
            docker logout ghcr.io